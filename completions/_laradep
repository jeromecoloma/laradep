#compdef laradep

# Zsh completion for Laravel Deployment Tool (laradep)
# Save this file as: ~/.zsh/completions/_laradep
# Or in any directory in your $fpath

_laradep() {
    local context state state_descr line
    typeset -A opt_args

    # Define the main commands
    local -a commands
    commands=(
        'setup:Prepares the remote environment by creating necessary directories'
        'upload:Syncs Laravel files to remote server and switches release symlink'
        'rollback:Switches the current symlink to a specific release'
        'connect:SSH into the remote server at the environment root path'
        'releases:List available releases on the remote server'
        'remove:Interactively delete old releases (protects current release)'
        'down:Put Laravel application into maintenance mode'
        'up:Bring Laravel application out of maintenance mode'
        'purge:Clear Cloudflare cache for the environment'
        'notify:Send deployment notification to Slack channel'
    )

    # Define environments
    local -a environments
    environments=(
        'staging:Development/Testing environment'
        'production:Live production environment'
    )

    # Define Slack message types
    local -a slack_messages
    slack_messages=(
        'deploy:Deployment completed successfully'
        'rollback:Rolled back to previous release'
        'maintenance:System maintenance window'
        'hotfix:Emergency hotfix deployed'
        'release:New release deployed'
        'alert:Deployment issue detected'
    )

    # Define emoji types
    local -a emojis
    emojis=(
        'deploy:🚀 Rocket (default for deployments)'
        'rollback:⏪ Rewind (default for rollbacks)'
        'warning:⚠️ Warning'
        'success:✅ Success'
        'error:❌ Error'
        'info:ℹ️ Information'
        'rocket:🚀 Rocket'
        'bell:🔔 Bell'
    )

    _arguments -C \
        '(-h --help)'{-h,--help}'[Show help information]' \
        '(-v --version)'{-v,--version}'[Show version information]' \
        '--update[Update laradep to latest version]' \
        '--slack-help[Show detailed Slack options help]' \
        '1: :->command' \
        '*: :->args' && return 0

    case $state in
        command)
            _describe 'laradep commands' commands
            ;;
        args)
            case $words[2] in
                setup|upload|rollback|connect|releases|remove|down|up|purge|notify)
                    _arguments -S \
                        '--env=[Environment]:environment:->environments' \
                        '--staging[Use staging environment]' \
                        '--production[Use production environment]' \
                        '--prod[Use production environment (alias)]' \
                        '*: :->command_args'
                    ;;
            esac

            case $state in
                environments)
                    _describe 'environments' environments
                    ;;
                command_args)
                    case $words[2] in
                        upload)
                            _arguments -S \
                                '--live[Execute live deployment (not dry-run)]' \
                                '--release=[Specific release timestamp]:release timestamp:' \
                                '--message=[Slack message type]:message type:->slack_messages' \
                                '--custom=[Custom Slack message]:custom message:' \
                                '--emoji=[Slack emoji type]:emoji type:->emojis' \
                                '--channel=[Slack channel]:channel:'
                            ;;
                        rollback)
                            _arguments -S \
                                '--release=[Release timestamp to rollback to]:release timestamp:_laradep_releases' \
                                '--message=[Slack message type]:message type:->slack_messages' \
                                '--custom=[Custom Slack message]:custom message:' \
                                '--emoji=[Slack emoji type]:emoji type:->emojis' \
                                '--channel=[Slack channel]:channel:'
                            ;;
                        remove)
                            _arguments -S \
                                '--release=[Specific release to delete]:release timestamp:_laradep_releases' \
                                '--force[Skip confirmation prompt]' \
                                '--message=[Slack message type]:message type:->slack_messages' \
                                '--custom=[Custom Slack message]:custom message:' \
                                '--emoji=[Slack emoji type]:emoji type:->emojis' \
                                '--channel=[Slack channel]:channel:'
                            ;;
                        down|up)
                            _arguments -S \
                                '--message=[Maintenance message]:maintenance message:' \
                                '--emoji=[Slack emoji type]:emoji type:->emojis' \
                                '--channel=[Slack channel]:channel:'
                            ;;
                        notify)
                            _arguments -S \
                                '--message=[Slack message type]:message type:->slack_messages' \
                                '--custom=[Custom Slack message]:custom message:' \
                                '--emoji=[Slack emoji type]:emoji type:->emojis' \
                                '--channel=[Slack channel]:channel:' \
                                '--release=[Release timestamp]:release timestamp:_laradep_releases'
                            ;;
                        purge)
                            _arguments -S \
                                '--message=[Slack message type]:message type:->slack_messages' \
                                '--custom=[Custom Slack message]:custom message:' \
                                '--emoji=[Slack emoji type]:emoji type:->emojis' \
                                '--channel=[Slack channel]:channel:'
                            ;;
                    esac

                    case $state in
                        slack_messages)
                            _describe 'Slack message types' slack_messages
                            ;;
                        emojis)
                            _describe 'Slack emoji types' emojis
                            ;;
                    esac
                    ;;
            esac
            ;;
    esac
}

# Helper function to get available releases from the server
# This is called when completing --release= options
_laradep_releases() {
    local releases
    local env
    
    # Extract environment from command line
    for word in $words; do
        case $word in
            --env=*)
                env=${word#--env=}
                break
                ;;
            --staging)
                env="staging"
                break
                ;;
            --production|--prod)
                env="production"
                break
                ;;
        esac
    done
    
    if [[ -n $env ]]; then
        # Try to get releases from laradep if it's available and configured
        releases=($(laradep releases --env=$env 2>/dev/null | grep -E '^\s*[0-9]{12}' | awk '{print $1}' | tr -d '→'))
        if [[ ${#releases[@]} -gt 0 ]]; then
            _describe 'available releases' releases
        else
            # Fallback to timestamp format hint
            _message 'release timestamp (format: YYYYMMDDHHMM)'
        fi
    else
        _message 'specify environment first (--env=staging|production)'
    fi
}

# Register the completion function
_laradep "$@"
